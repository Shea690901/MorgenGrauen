THEMA:
	ERKENNUNG UND AUFNAHME VON GEGENSTAENDEN.

AUTOR:
	Rumata 23.08.92

VERSION:
	1.0

DURCHGESEHEN:
	Viper 24.08.94

FUNKTIONEN:
	object select_object( string description, object *environments );
	int QueryGet( object obj );
	int QueryPut( object obj );
	int move( object dest, string method );

ERLAEUTERUNG:
	Die Funktion select_object() sucht in den uebergebenen Environments
	nach einem Objekt, auf das die Beschreibung "description" zutrifft.
	Dabei muessen die Environments in der Reihenfolge, in der sie
	durchsucht werden sollen, angegeben werden. Kann kein Objekt gefunden
	werden, so gibt die Funktion 0 zurueck.

	Die Funktion QueryGet() ist der Nachfolger der lfun get(). Sie wird
	mit dem Objekt, das genommen werden soll als Argument in dem Objekt,
	in das es hineingelegt werden soll, aufgerufen. Die Funktion, dient
	dazu, bei einem Objekt anzufragen, ob es ein Objekt aufnehmen
	moechte.
	Dabei geht es nur um prinzipielle Bereitschaft; die Gewichtsueber-
	pruefung erfolgt separat. Bei Bereitschaft soll eine 1 zurueck-
	gegeben werden, sonst eine 0. Die Meldung, warum keine Bereitschaft
	vorliegt, muss in der Funktion ausgegeben werden.

	Die Funktion QueryDrop() ist der Nachfolger der lfun drop(). Sie
	wird in dem Objekt aufgerufen, in das das Argument bewegt werden
	soll. Hiermit kann man anfragen, ob das Objekt bereit ist, das Arguent
	aufzunemhen. 
	Auch bei dieser Funktion geht es nur um prinzipielle Bereitschaft.
	Die Rueckmeldungen und Werte sind analog zu QueryGet().

	Der Aufruf von QueryPut und QueryGet erfolgt automatisch in
	move(). move() entscheidet anhand der Methode, welche Art von
	Bewegung vorliegt.

move():
	move( dest, methode ) bewegt das Objekt in das Objekt dest.
	Mit methode koennen bestimmte Arten der Bewegung angewaehlt werden.
	Es gibt folgende Methoden:

	M_GO
		Diese Art der Bewegung ist nur in Lebewesen implementiert.

	M_GET
		Diese Art der Bewegung zeigt an, das der Spieler das Objekt
		in sein Inventar aufnehmen will. Es werden zusaetzliche
		Plausibilitaetskontrollen vorgenommen.

	M_PUT
		Diese Art der Bewegung zeigt an, das der Spieler das Objekt
		in ein bestimmtes anderes bewegen will. Auch hier werden
		zusaetzliche Kontrollen durchgefuehrt.

		Nur diese 3 Methoden sollten benutzt werden !!
		Weitere Methoden dienen zur internen Verwaltung:

	0
		(Keine Methode) Bewege das Objekte ohne Ueberpruefung.
		Nur das Gewicht wird kontrolliert. 
		Lebewesen koennen auf diese Art *nicht* bewegt werden.

	M_FORCE_SPLIT
		Sorgt bei Unit-Objekten dafuer, dass ein Spieler 2 von
		Ihnen bestitzt.
