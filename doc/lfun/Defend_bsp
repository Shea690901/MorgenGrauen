Defend() - BEISPIELE

FUNKTION:
     varargs int Defend(int dam, mixed dam_type, mixed spell, object enemy)

BEMERKUNGEN
    Die hier aufgefuehrten Komplexbeispiele sind zum Verstaendnis gedacht.

BEISPIELE
     *** ein Biss in das Bein :) ... der (ohne Treffermeldung) durchgeht
     this_player()->Defend(random(500),
                           ({DT_PIERCE, DT_RIP}),
                           ([SP_PHYSICAL_ATTACK: 0]),
                           this_object());

     *** mit der Hose als 200%ige Ruestung und Rest mit 100% ***
     this_player()->Defend(random(500),
                           ({DT_PIERCE, DT_RIP}),
                           ([SP_PHYSICAL_ATTACK: 1,
                             SP_REDUCE_ARMOUR:   ([AT_TROUSERS: 200])]),
                           this_object());

     *** Spell-Parameter ***
     // Beispiel fuer einen Spell, der nur vom Helm normal aufgehalten wird,
     // alle anderen (angebenenen) Ruestungen haben 0% Schutzwirkung.
     // Mit Ausgabe eigener Meldungen: beginnend mit -1, da der verursachte
     // Schadenswert minimal 0 wird (fuers Ersetzen Feind: @WEx2,
     // Spieler: WEx1); maximal wird er (Empfindlichkeiten jetzt mal aussen
     // vor) 49 (499/10 = 49) nicht 499!!!
     this_player()->Defend(random(500),
                           ({DT_PIERCE, DT_AIR}),
                           ([SP_PHYSICAL_ATTACK: 1, // muss schon sein
                             SP_REDUCE_ARMOUR:   ([AT_ARMOUR:   0,
                                                   AT_HELMET: 100,
                                                   AT_RING:     0,
                                                   AT_GLOVE:    0,
                                                   AT_CLOAK:    0,
                                                   AT_BOOT:     0,
                                                   AT_TROUSERS: 0,
                                                   AT_SHIELD:   0,
                                                   AT_AMULET:   0,
                                                   AT_BANGLE:   0,
                                                   AT_GIRDLE:   0,
                                                   AT_MISC:     0
                                                 ])
                             SP_SHOW_DAMAGE: ({
               ({-1,"@WER2 schrammt Dich mit einem durchbohrenden Blick.",
                   "Du schrammst @WEN1 mit einem durchbohrenden Blick.",
                   "@WER2 schrammt @WEN1 mit einem durchbohrenden Blick."}),
               ({5,"Der durchbohrende Blick von @WEM2 trifft Dich.",
                   "Dein durchbohrender Blick trifft @WEN1.",
                   "Der durchbohrende Blick von @WEM2 trifft @WEN1."}),
               ({20,"@WESSEN2 stechender Blick durchbohrt Dich.",
                   "Dein stechender Blick durchbohrt @WEN1.",
                   "@WESSEN2 stechender Blick durchbohrt @WEN1."})}).
                           ]),
                           this_object());

     // etwas geschickter geht das Ganze, wenn wir einfach aus der Mudlib
     // alle existierenden Ruestungen in ein Mapping packen und nullen:
     mapping map;
     map=map_indices(VALID_ARMOUR_CLASS, #'!);
     map[AT_HELMET]=100;
     this_player()->Defend(random(500),
                           ({DT_PIERCE, DT_AIR}),
                           ([SP_PHYSICAL_ATTACK: 1, // muss schon sein
                             SP_REDUCE_ARMOUR:   map,
                             SP_SHOW_DAMAGE: ({...

     *** der Biss mit Meldung ***
     // eine Meldung ... die nur ausgegeben wird, wenn der Biss auch
     // mindestens einen LP abzieht
     this_player()->Defend(random(500),
                           ({DT_PIERCE, DT_RIP}),
                           ([SP_PHYSICAL_ATTACK: 1,
                             SP_REDUCE_ARMOUR:   ([AT_TROUSERS: 200]),
			     SP_SHOW_DAMAGE: ({
               ({1,"@WER2 beisst dich ins Bein!",
                   "Du beisst @WEN1 ins Bein!",
                   "@WER2 beisst @WEN1 ins Bein!"})}) ]),
                           this_object());

     *** DefendFunc und Defend ***
     // Eine Luftwirbel reflektierende Ruestung:
     int DefendFunc(string *dtyp, mixed spell, object enemy) {
       if(member_array(DT_AIR, dtyp)!=-1 && !spell[SP_RECURSIVE])
         enemy->Defend(random(200),
                       ({DT_AIR}),
                       ([SP_RECURSIVE: 1,
                         SP_SHOW_DAMAGE:
                         ({"Ein Luftwirbel erfasst auch dich.",
                           "Deine Ruestung wirbelt @WEN1 herum.",
                           "@WESSEN2 Ruestung wirbelt @WEN1 herum."]),
                       QueryProp(P_WORN));
       return 0;
     }

SIEHE AUCH:
     Angriff:	Attack(L), P_NO_ATTACK, InsertEnemy(L)
     Schaden:	P_ENABLE_IN_ATTACK_OUT, P_LAST_MOVE,
		do_damage(L), reduce_hit_points(L)
     Schutz:    P_DEFENDERS, InformDefend(L), DefendOther(L)
		P_ARMOURS, P_AC, P_DEFEND_FUNC, QueryDefend(L)
		P_BODY, A_DEX
     Daten:	P_LAST_COMBAT_TIME
		P_LAST_DAMTYPES, P_LAST_DAMTIME, P_LAST_DAMAGE
     Resistenz: P_RESISTANCE_STRENGTHS, CheckResistance(L)
     Sonstiges: CheckSensitiveAttack(L)
		InternalModifyDefend(L)
		UseSkill(L)

9.Feb 2005 Gloinson
