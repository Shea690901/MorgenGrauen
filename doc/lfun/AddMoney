AddMoney(L)
FUNKTION:
     public int AddMoney(int amount);

DEFINIERT IN:
     /std/player/moneyhandler.c

ARGUMENTE:
     int amount
	Die zufuehrende oder abziehende Geldmenge

BESCHREIBUNG:
     Dem Spieler wird die in <amount> festgelegte Geldmenge abgezogen oder
     zugefuehrt.

RUeCKGABEWERT:
     Technisch gesehen wird Geld mit entsprechendem <amount> erzeugt
     ("/obj/money.c") und mittels "move" in den Spieler bewegt.  Das Ergebnis
     dieses "move"-Aufrufes wird hier uebergeben, z.B. 1 fuer OK.
     Die moeglichen Fehler-Konstanten sind in /sys/moving.h definiert, siehe
     auch Dokumentation zu "move".

BEMERKUNGEN:
     <amount> kann sowohl positiv als auch negativ sein. Welche Auswirkungen
     beide Faelle haben, sollte klar sein. Doch sollte bei einem negativen
     <amount> vorher mittels QueryMoney() abgefragt werden, ob der Spieler
     auch ueber ausreichend Geld verfuegt.  Wird dem Spieler Geld abgezogen,
     ist darauf zu achten, dieses in der Zentralbank einzuzahlen (s.a.:
     PayIn() ). 
        
     Im Gegensatz zu Spielern ist es fuer Raeume, Objekte oder Npc nicht so
     einfach, Geld zu bekommen. Hier muss <bank.h> includet und
     /std/player/moneyhandler.c per inherit eingebaut werden.

     Achtung: Kann der Spieler die in <amount> angebene Geldmenge nicht
	      tragen, werden ihm keine Muenzen in sein Inventar bewegt.  Die
	      Fehlermeldung erkennt man an dem Rueckgabewert ME_TOO_HEAVY.

BEISPIELE:
     // gib ihm Geld
     this_player()->AddMoney(50);

     // nimm ihm Geld
     if(this_player()->AddMoney(-50)==1)
      write("Der Ork beklaut dich!\n");

SIEHE AUCH:
     Geldhandling:	QueryMoney(L)
     Zentralbank:	PayIn(L), WithDraw(L), _query_current_money(L)
     Sonstiges:		move(L),
			/obj/money.c, /sys/moving.h, /sys/bank.h,
			/std/player/moneyhandler.c

Last modified: Mon Aug 20 13:28:42 2001 by Patryn
