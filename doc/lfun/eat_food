FUNKTION:
    public varargs int eat_food(int food, int testonly, string mytext)

DEFINIERT IN:
    /std/living/life.c

ARGUMENTE:
    food: Wird zu dem augenblicklichen Saettigungsgrad (P_FOOD) addiert.
    testonly: Ist das Flag gesetzt, wird dem Spieler kein FOOD zugefuehrt.
              Darf nur zum Testen der Heilstelle verwendet werden und muss
              im normalen Betrieb auf '0' stehen!
    mytext: Wer selber einen Text bei Misserfolg ausgeben lassen moechte,
            darf sich hier was nettes ausdenken.

BESCHREIBUNG:
    Es wird geprueft, ob dem Spieler der angebene Wert "food" auf seine
    aktuelle P_FOOD addiert werden kann oder nicht. Ist dies moeglich, wird
    es gemacht.
    Sollen neben P_FOOD noch weitere Props manipuliert werden - bspw. zur
    Heilung eines Lebewesens - bietet sich die Funktion consume() an.

RUECKGABEWERT:
     0, wenn food + P_FOOD > P_MAX_FOOD.
    >0, wenn Erfolg.

BEMERKUNG:
    eat_food() ist in sofern nuetzlich, als dass dabei die Abfrage von
    P_FOOD und P_MAX_FOOD des Spielers weggelassen werden kann. Nervige
    Zahlenspielereien entfallen somit.

    Achtung: Es ist hierbei wichtig, auf den Erfolg der Funktion zu testen, 
    -------  bevor eine Heilung erfolgt.

    Bei Heilstellen sollte eine evtl. Heilung des Spielers mit der eigens
    dafuer eingerichteten Funktion check_and_update_timed_key realisiert
    werden.

BEISPIEL:
    #define TP this_player()
    ...

    int heilstelle()
     {
// Wenn auf das P_FOOD des Spielers die angegebenen 10 nicht mehr addiert
// werden koennen (weil sonst P_MAX_FOOD ueberschritten wird), wird die 
// Fehlermeldung ausgegeben, dass der Spieler nichts mehr essen/trinken kann.
// Bei gesetztem 'mytext' wird 'mytext' an den Spieler ausgegeben.
// Ansonsten wird die Standardmeldung ausgegeben.

      if ( !TP->eat_food(10,0,"Der Keks ist einfach zuviel fuer Dich.\n") )
       return 1;

// Spieler hat noch ausreichend Spielraum bei P_FOOD. Die 10 werden 
// automatisch addiert!

      write(BS("Du knabberst ein bisschen an dem Keks herum und fuehlst
               "Dich gleich viel besser."));
      TP->heal_self(30);
// ODER
      TP->buffer_hp(30,5);
      TP->buffer_sp(30,5);
// Je nachdem, ob es tragbare Heilung sein soll oder nicht (also ob es
// instant sein soll, oder nicht).
      return 1;
     }

SIEHE AUCH:
----------
     consume, drink_alcohol, eat_food, heal_self, restore_spell_points,
     reduce_hit_points, check_and_update_timed_key, buffer_hp, buffer_sp,
     defuel_drink, defuel_food,
     P_DRINK, P_FOOD, P_ALCOHOL
     heilung, enttanken, food

----------------------------------------------------------------------------
27.10.2009, Zesstra

