FUNKTION:
    public varargs int drink_soft(int strength, int testonly, string mytext)

DEFINIERT IN:
    /std/living/life.c

ARGUMENTE:
    soft: Wird zu dem augenblicklichen Saettigungsgrad (P_DRINK) addiert.
    testonly: Ist das Flag gesetzt, wird dem Spieler kein DRINK zugefuehrt.
              Darf nur zum Testen der Heilstelle verwendet werden und muss
              im normalen Betrieb auf '0' stehen!
    mytext: Wer selber einen Text bei Misserfolg ausgeben lassen moechte,
            darf sich hier was nettes ausdenken.

BESCHREIBUNG:
    Es wird geprueft, ob dem Spieler der angebene Wert "soft" auf seine
    aktuelle P_DRINK addiert werden kann oder nicht. Ist dies moeglich,
    wird es gemacht.
    Sollen neben P_DRINK noch weitere Props manipuliert werden - bspw. zur
    Heilung eines Lebewesens - bietet sich die Funktion consume() an.

RUECKGABEWERT:
     0, wenn soft + P_DRINK > P_MAX_DRINK.
    >0, wenn Erfolg.

BEMERKUNG:
    drink_soft() ist in sofern nuetzlich, als dass dabei die Abfrage von
    P_DRINK und P_MAX_DRINK des Spielers weggelassen werden kann. Nervige
    Zahlenspielereien entfallen somit.

    Achtung: Es ist hierbei wichtig, auf den Erfolg der Funktion zu testen, 
    -------  bevor eine Heilung erfolgt.

    Bei Heilstellen sollte eine evtl. Heilung des Spielers mit der eigens
    dafuer eingerichteten Funktion check_and_update_timed_key realisiert
    werden.

BEISPIEL:
    s. Bsp. zu eat_food

SIEHE AUCH:
----------
     consume, drink_alcohol, eat_food, heal_self, restore_spell_points,
     reduce_hit_points, check_and_update_timed_key, buffer_hp, buffer_sp,
     defuel_drink, defuel_food,
     P_DRINK, P_FOOD, P_ALCOHOL
     heilung, enttanken, food

----------------------------------------------------------------------------
27.10.2009, Zesstra
