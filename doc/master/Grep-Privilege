backend.c:    extern int malloc_privilege;
backend.c:		    malloc_privilege = MALLOC_MASTER;
backend.c:		malloc_privilege = MALLOC_USER;
backend.c:		malloc_privilege = MALLOC_USER;
closure.c:	    res = apply_master_ob("privilege_violation", 3);
closure.c:		  "Privilege violation: nomask simul_efun %s\n",
comm1.c:    extern int malloc_privilege;
comm1.c:	    malloc_privilege = MALLOC_MASTER;
comm1.c:	    malloc_privilege = MALLOC_MASTER;
gcollect.c:    extern int malloc_privilege;
gcollect.c:    malloc_privilege = MALLOC_MASTER;
gcollect.c:    malloc_privilege = MALLOC_SYSTEM;
gcollect.c:	    malloc_privilege = MALLOC_MASTER;
interpret.c:int _privilege_violation(what, where, sp)
interpret.c:    svp = apply_master_ob("privilege_violation", 3);
interpret.c:        error("privilege violation : %s\n", what);
interpret.c:int privilege_violation4(what, whom, how, sp)
interpret.c:    svp = apply_master_ob("privilege_violation", 4);
interpret.c:        error("privilege violation : %s\n", what);
interpret.c:#define privilege_violation(what, where) (\
interpret.c:	_privilege_violation(what, where, sp)\
interpret.c:        if (privilege_violation("call_out_info", sp) > 0 ) {
interpret.c:            privilege_violation("set_this_object", sp) > 0 )
interpret.c:		privilege_violation("bind_lambda", sp) <= 0 )
interpret.c:            if (privilege_violation("set_extra_wizinfo_size", sp) > 0)
interpret.c:            if (privilege_violation("set_extra_wizinfo", sp-1) <= 0 ||
interpret.c:            if (privilege_violation("get_extra_wizinfo", sp) <= 0 ||
interpret.c:            if (privilege_violation("send_imp", sp-2) > 0)
interpret.c:            if (privilege_violation("set_auto_include_string", sp) > 0)
lang.c:			res = apply_master_ob("privilege_violation", 3);
lang.c:			      "Privilege violation: nomask simul_efun %s",
lang.y:			res = apply_master_ob("privilege_violation", 3);
lang.y:			      "Privilege violation: nomask simul_efun %s",
lex.c:		res = apply_master_ob("privilege_violation", 3);
lex.c:		      "Privilege violation: nomask simul_efun %s",
lint.h:int _privilege_violation PROT((char *, struct svalue *, struct svalue *));
lint.h:int privilege_violation4
lint.h:int privilege_violation PROT((char *, struct svalue *));
main.c:int malloc_privilege = MALLOC_USER;
main.c:    malloc_privilege = MALLOC_USER;
mapping.c:    extern int malloc_privilege;
mapping.c:    malloc_privilege = MALLOC_SYSTEM;
prolang.y:			res = apply_master_ob("privilege_violation", 3);
prolang.y:			      "Privilege violation: nomask simul_efun %s",
simulate.c:    if (privilege_violation4("rename_object", ob, name, sp)) {
simulate.c:		if ( !privilege_violation4(
smalloc.c:	extern int malloc_privilege;
smalloc.c:	if (malloc_privilege < MALLOC_SYSTEM)
smalloc.c:	extern int malloc_privilege;
smalloc.c:	    if (malloc_privilege >= MALLOC_MASTER && reserved_master_area) {
smalloc.c:	    if (malloc_privilege >= MALLOC_SYSTEM && reserved_system_area) {
smalloc.c:	if (malloc_privilege < MALLOC_SYSTEM) {
smalloc.c:	extern int malloc_privilege;
smalloc.c:	int save_privilege = malloc_privilege;
smalloc.c:	malloc_privilege = MALLOC_SYSTEM;
smalloc.c:	malloc_privilege = save_privilege;
wiz_list.c:    if (_privilege_violation("wizlist_info", &const0, sp) <= 0) {
